{"pages":[{"title":"About Me","text":"姓名：贺帅⬆️故乡：陕西西安工作地：北京学校：陕西科技大学 95后手游开发一枚🐶，工作在北京，在一家海外游戏公司快乐的搬砖😊爱好：手🎮、旅游🍃、switch🎮 博客主要用于记录和分享生活中遇到的鸡零狗碎、工作和学习中遇到的一些坑 本站文章如无特别声明，均为原创，采用 知识共享署名 4.0 国际许可协议 进行许可，转载请注明来源。 本站采用了 Hexo 静态博客框架，主题为 Icarus.","link":"/about/index.html"}],"posts":[{"title":"LeetCode-整数反转","text":"整数反转是LeetCode题库中简单的一道题目，题意和解法如下。 题意Reverse digits of an integer. Example1: x = 123, return 321Example2: x = -123, return -321 备注：当数字溢出时，则程序返回0。 解题思路 用一个变量y(初始化为0)保存改变之后的值； 将x的个位取下来，并且y乘上10，然后对加上x； 判断y-x的个位除以10,时候等于变量y（防止数字溢出），如果不等于则返回0； 将x等于x除以10，进一位； 当x存在时，循环2~4； 返回y; 解题方案C++版123456789101112131415161718#include&lt;iostream&gt;using namespace std;int reverse(int x) { int num = 0; while (x != 0) { int tail = x % 10; int newnum = num * 10 + tail; if ((newnum - tail) / 10 != num) { return 0; } num = newnum; x /= 10; } return num;}","link":"/2020/09/08/ReverseNumber/"},{"title":"虚幻引擎（unreal）学习笔记（一）","text":"断言C/C++ 编程中assert可以在开发阶段帮助检测和诊断不正常或无效的运行时条件。最简单的理解：assert必须为true，否则程序会直接停止运行。 虚幻提供了assert等同项的三个不同族系：check、verify、ensure. ckeck 检查宏在Debug、Development、Test和Shipping Editor版本中运行（以”Slow”结尾的宏除外，其仅在调试（Debug）版本中运行）。定义 USE_CHECKS_IN_SHIPPING 以保留一个true值（通常为 1），使Check宏可在所有版本中运行。 verify USE_CHECKS_IN_SHIPPING 可以控制是否生效。 ensure Ensure宏的表达式计算得出的值为false，引擎将通知崩溃报告器，但程序仍会继续运行。 资源加载 异步资源加载（Streamable class） SynchronousLoad: 将进行一次简单的块加载并返回对象。 该方法或许适用于较小对象，但可能会导致主线程长时间停滞。 RequestAsyncLoad 异步加载一组资源，并在完成后调用传入的委托（可以用来处理资源或者做其他事情） 引用资源 硬性引用 直接属性应用 通过UPROPERTY宏公开 构造时引用 程序明确知道需要加载的资源. 软性引用 间接属性引用 查找/加载对象 游戏逻辑编程Actor一种支持三维变换（平移、旋转或缩放）的泛型类。我的理解是类似于Unity中的MonoBehiver主要类型： UActorComponent 这是基础组件。其可作为Actor的一部分被包含。如果需要，其可进行Tick ActorComponents 用于概念上的功能，如AI或解译玩家输入。 USceneComponent：SceneComponents 拥有变换的ActorComponents。变换是场景中的位置，由位置、旋转和缩放定义。SceneComponents能以层级的方式相互附加。Actor的位置、旋转和缩放取自位于层级根部的SceneComponent。 UPrimitiveComponent：PrimitiveComponent 拥有一类图像表达（如网格体或粒子系统）的SceneComponent。诸多有趣的物理和碰撞设置均在此处。 Ticking Actor所有Actor每帧都可以Tick，一致性必要的更新计算/操作。 销毁 调用Destory()可以显式销毁Actor。会被标记为代销毁，说明在下次垃圾回收被清理之前都将存在。","link":"/2020/09/08/unrealRead-1/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","link":"/tags/LeetCode/"},{"name":"unrealEngine","slug":"unrealEngine","link":"/tags/unrealEngine/"}],"categories":[]}